#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# /sys/class/gpio belongs to root by default, change it to gpio group
chgrp -R gpio /sys/class/gpio
chmod -R g+rw /sys/class/gpio

# show timer trigger on blue led, will be handled later by ifplugdown
echo -n timer > /sys/class/leds/blue\:ph21\:led2/trigger

# optimize cpu performance
echo -n 25 > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
echo -n 10 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
echo -n 1 > /sys/devices/system/cpu/cpufreq/ondemand/io_is_busy

for cpu in $(ls /sys/devices/system/cpu/ | grep 'cpu[0-9][0-9]*');do
  echo -n ondemand > /sys/devices/system/cpu/${cpu}/cpufreq/scaling_governor
  echo -n 1200000 > /sys/devices/system/cpu/${cpu}/cpufreq/scaling_max_freq
  echo -n 300000 > /sys/devices/system/cpu/${cpu}/cpufreq/scaling_min_freq
done

# disable lowlevel log messages after system is up
sysctl -w "kernel.printk=3 4 1 3"

exit 0
